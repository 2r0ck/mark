{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/account.routing.ts","webpack:///./src/app/account/login/login.component.html","webpack:///./src/app/account/login/login.component.scss","webpack:///./src/app/account/login/login.component.ts","webpack:///./src/app/account/registration-form/registration-form.component.html","webpack:///./src/app/account/registration-form/registration-form.component.scss","webpack:///./src/app/account/registration-form/registration-form.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/busy/busy.component.html","webpack:///./src/app/busy/busy.component.scss","webpack:///./src/app/busy/busy.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.scss","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/services/test-ser.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport { LoginComponent } from './login/login.component';\nimport { routing } from './account.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    routing\n  ],\n  declarations: [RegistrationFormComponent, LoginComponent]\n})\nexport class AccountModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport {  LoginComponent } from './login/login.component';\n \n\nexport const routing: ModuleWithProviders = RouterModule.forChild([\n  { path: 'register', component: RegistrationFormComponent},\n  { path: 'login', component: LoginComponent}\n]);\n","module.exports = \"<p>\\n  login works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <h2>Please enter your information</h2>\\n    </div>\\n</div>\\n<!-- \\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"registerUser(f)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"first-name\\\">First name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"First name\\\" name=\\\"firstName\\\" tmFocus ngModel>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"last-name\\\">Last name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" ngModel>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <input id=\\\"email\\\" type=\\\"text\\\" required name=\\\"email\\\" validateEmail class=\\\"form-control\\\" placeholder=\\\"Email\\\" ngModel #email=\\\"ngModel\\\">\\n                <small [hidden]=\\\"email.valid || (email.pristine && !submitted)\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"location\\\">Location</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"location\\\" placeholder=\\\"Location\\\" required name=\\\"location\\\" ngModel>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid || isRequesting\\\">Sign Up</button>\\n                <app-spinner [isRunning]=\\\"isRequesting\\\"></app-spinner>\\n            </div>\\n\\n            <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                <strong>Oops!</strong> {{errors}}\\n            </div>\\n\\n        </form>\\n    </div>\\n</div> -->\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss']\n})\nexport class RegistrationFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-header></app-header>\\n\\n<!-- container -->\\n<div class=\\\"container-fluid\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { BusyComponent } from './busy/busy.component';\nimport { routing } from './app.routing';\nimport { AccountModule } from './account/account.module';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, XHRBackend } from '@angular/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    BusyComponent,\n    NotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    AccountModule,\n    HttpClientModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\n\nconst appRoutes: Routes = [\n  { path: 'home',  component: HomeComponent },\n  { path: '',  redirectTo: '/home', pathMatch: 'full' },   // root address\n  { path: '**',  component: NotfoundComponent }  // notfound address\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n","module.exports = \"<p>\\n  busy works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-busy',\n  templateUrl: './busy.component.html',\n  styleUrls: ['./busy.component.scss']\n})\nexport class BusyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n    <div class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/home\\\">dotnetGigs <span class=\\\"sr-only\\\">(current)</span></a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/login\\\">login</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/register\\\">account</a>\\n            </li>\\n            <!-- <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Dropdown\\n        </a>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n                </div>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n            </li> -->\\n        </ul>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n            <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n    home works!!\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"testConnection()\\\">Test Connect</button>\\n</p>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { UserAuthService } from '../services/user.auth.service';\nimport { TestSerService } from \"../services/test-ser.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private  userService: TestSerService) { }\n\n  ngOnInit() {\n  }\n\n  testConnection(){\n      //this.userService.testConnect();\n\n       this.userService.do();\n  }\n\n}\n","module.exports = \"<h1>\\n    404 Page\\n</h1>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Http } from '@angular/http';\n\n\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestSerService {\n\n  private baseUrl = 'http://localhost:5000/api';\n  private account_UrlPart = '/account';\n  private test_Url = '/data/publicData';\n\n  constructor(private httpClient: HttpClient, private http: Http) { }\n\n\n  do() {\n    console.log(\"test do!\");\n    let url = this.baseUrl + this.test_Url;\n    //this.httpClient.\n\n    let res = this.httpClient.get<any>(url).subscribe(res => {\n          console.log(res);\n      });\n\n    let res2 = this.http.get(url)\n      .subscribe(res => {\n          console.log(res);\n      });\n    //.pipe(tap(r => console.log(`success->` + r)), catchError(this.handleOperationError<any>('test')));\n  }\n\n  protected handleOperationError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}